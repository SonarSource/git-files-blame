plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'com.jfrog.artifactory' version '4.28.1'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

group = 'org.sonarsource.git.blame'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

ext {
    buildNumber = System.getProperty("buildNumber")
}
// Replaces the version defined in sources, usually x.y-SNAPSHOT, by a version identifying the build.
if (version.endsWith('-SNAPSHOT') && ext.buildNumber != null) {
    def versionSuffix = (version.toString().count('.') == 1 ? ".0.${ext.buildNumber}" : ".${ext.buildNumber}")
    version = version.replace('-SNAPSHOT', versionSuffix)
}

repositories {
    maven {
        url "https://maven.google.com"
    }
    def repository = project.hasProperty('qa') ? 'sonarsource-qa' : 'sonarsource'
    maven {
        url "https://repox.jfrog.io/repox/${repository}"
        // The environment variables ARTIFACTORY_PRIVATE_USERNAME and ARTIFACTORY_PRIVATE_PASSWORD are used on QA env (Jenkins)
        // On local box, please add artifactoryUsername and artifactoryPassword to ~/.gradle/gradle.properties
        def artifactoryUsername = System.env.'ARTIFACTORY_PRIVATE_USERNAME' ?: (project.hasProperty('artifactoryUsername') ? project.getProperty('artifactoryUsername') : '')
        def artifactoryPassword = System.env.'ARTIFACTORY_PRIVATE_PASSWORD' ?: (project.hasProperty('artifactoryPassword') ? project.getProperty('artifactoryPassword') : '')
        if (artifactoryUsername && artifactoryPassword) {
            credentials {
                username = artifactoryUsername
                password = artifactoryPassword
            }
        }
    }
}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.4.0.202211300538-r'
    implementation 'org.slf4j:slf4j-api:1.7.36'

    testCompileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.1.1'
}

sonarqube {
    properties {
        property 'sonar.projectName', projectTitle
        property "sonar.exclusions","src/main/java/org/sonar/scm/git/blame/diff/**"
        property "sonar.java.coveragePlugin", "jacoco"
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}
tasks['sonarqube'].dependsOn jacocoTestReport

artifactory {
    clientConfig.includeEnvVars = true
    clientConfig.envVarsExcludePatterns = '*password*,*PASSWORD*,*secret*,*MAVEN_CMD_LINE_ARGS*,sun.java.command,*token*,*TOKEN*,*LOGIN*,*login*,*KEY*,*signing*'
    contextUrl = System.getenv('ARTIFACTORY_URL')
    publish {
        repository {
            repoKey = System.getenv('ARTIFACTORY_DEPLOY_REPO')
            username = System.getenv('ARTIFACTORY_DEPLOY_USERNAME')
            password = System.getenv('ARTIFACTORY_DEPLOY_PASSWORD')
        }
        defaults {
            properties = [
                    'build.name': 'git-files-blame',
                    'build.number': System.getenv('BUILD_NUMBER'),
                    'pr.branch.target': System.getenv('PULL_REQUEST_BRANCH_TARGET'),
                    'pr.number': System.getenv('PULL_REQUEST_NUMBER'),
                    'vcs.branch': System.getenv('GIT_BRANCH'),
                    'vcs.revision': System.getenv('GIT_COMMIT'),
                    'version': version
            ]
            publications 'pluginMaven'
            publishPom = true // Publish generated POM files to Artifactory (true by default)
            publishIvy = false // Publish generated Ivy descriptor files to Artifactory (true by default)
        }
    }
    clientConfig.info.buildName = 'git-files-blame'
    clientConfig.info.buildNumber = System.getenv('BUILD_NUMBER')
    // The name of this variable is important because it's used by the delivery process when extracting version from Artifactory build info.
    clientConfig.info.addEnvironmentProperty('PROJECT_VERSION', "${version}")
}
